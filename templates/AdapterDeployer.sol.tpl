// SPDX-License-Identifier: MIT
pragma solidity ^0.8.29;

/*
 * ⚠️  DO NOT EDIT THIS FILE MANUALLY ⚠️
 *
 * This file is auto-generated by scripts/generate_deployers.py
 * Any manual changes will be overwritten on the next build.
 *
 * To modify this contract:
 * 1. Edit the template: scripts/templates/AdapterDeployer.sol.tpl
 * 2. Update configuration: scripts/contracts.json
 * 3. Regenerate: python3 scripts/generate_deployers.py
 */

import {ICreateX} from "@interfaces/ICreateX.sol";
import {{{CONTRACT_NAME}}} from "{{IMPORT_PATH}}";

/**
 * @title {{CONTRACT_NAME}}Deployer
 * @notice Self-destructing deployer for {{CONTRACT_NAME}}
 * @dev Deploys {{CONTRACT_NAME}} via CreateX using predetermined salt, then self-destructs
 * @dev {{DESCRIPTION}}
 */
contract {{CONTRACT_NAME}}Deployer {
    ICreateX constant CREATEX = ICreateX(0xba5Ed099633D3B313e4D5F7bdc1305d3c28ba5Ed);
    bytes32 constant SALT = {{SALT}};
    address constant EXPECTED_ADDR = {{EXPECTED_ADDRESS}};

    constructor() {
        address deployed = CREATEX.deployCreate3(SALT, type({{CONTRACT_NAME}}).creationCode);
        require(deployed == EXPECTED_ADDR, "{{CONTRACT_NAME}} deployment address mismatch");
        require(deployed != address(0), "{{CONTRACT_NAME}} deployment failed");
        selfdestruct(payable(msg.sender));
    }
}
